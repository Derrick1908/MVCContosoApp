using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;

namespace ContosoUniversity.Models
{
    public class Course                                             //The Instructor and Course entities have a many-to-many relationship, and there is no entity class between them. A join table is required in the database. The Entity Framework automatically creates the CourseInstructor table, and you read and update it indirectly by reading and updating the Instructor.Courses and Course.Instructors navigation properties.
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]           //lets you enter the primary key for the course rather than having the database generate it. By default, the Entity Framework assumes that primary key values are generated by the database. 
        [Display(Name = "Number")]
        public int CourseID { get; set; }

        [StringLength(50, MinimumLength = 3)]
        public string Title { get; set; }

        [Range(0,5)]
        public int Credits { get; set; }

        public int DepartmentID { get; set; }

        public virtual Department Department { get; set; }                      //A course is assigned to one department, so there's a DepartmentID foreign key and a Department navigation property
        public virtual ICollection<Enrollment> Enrollments { get; set; }        //Navigation Property, A Course entity can be related to any number of Enrollment entities.
        public virtual ICollection<Instructor> Instructors { get; set; }        //A course may be taught by multiple instructors, so the Instructors navigation property is a collection

    }
}